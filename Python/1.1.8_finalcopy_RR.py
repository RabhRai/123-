import turtle as trtl
#Set canvas size to be similar to the origonal picture
trtl.setup(1000,500)
#Make thing go fast
trtl.speed(0)
#List to store all the colors for the canvas.  Unfourtunately DarkSlateGray isn't dark enough as compared to the origional picture 
# and there isn't a darker Gray.
Colors = ["navyblue", "skyblue", "blue", "black", "DarkSlateGray","gold", "dark gray","White"]
#Set the background color to be the same as the sky 
trtl.bgcolor(Colors[0])
#Draws small block.  For this to work best set z as 20
def small_block(z):
    trtl.right(90)
    trtl.forward(z)
    trtl.left(90)
    trtl.forward(z*2)
    trtl.left(90)
    trtl.forward(z)
    trtl.right(90)
#Draws a large driveway. for this to work best set a as 40
def large_block(a):
    trtl.right(90)
    trtl.forward(a)
    trtl.left(90)
    trtl.forward(a)
    trtl.left(90)
    trtl.forward(a)
    trtl.right(90)
#Draws the lights in the begining
def light_box():
    trtl.color(Colors[5])
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.left(90)
        trtl.forward(20)
        trtl.left(90)
    trtl.end_fill()
#draws the road and the driveways/garages
def road():
    trtl.setheading(0)
    trtl.color(Colors[3])
    trtl.penup()
    #Put turtle in position
    trtl.setpos(-500,-250)
    trtl.pendown()
    trtl.begin_fill()
    trtl.forward(1000)
    trtl.left(90)
    trtl.forward(60)
    trtl.left(90)
    trtl.forward(120)
    small_block(20)
    trtl.forward(80)
    #Draws double driveway
    for i in range(2):
        large_block(40)
        trtl.forward(40)
    trtl.forward(40)
    # The while loop does a one block driveway folloed by a two block driveway and puts turtle in the place to make the garage
    x=1
    while x < 3:
        trtl.right(90)
        trtl.forward(x*20)
        trtl.left(90)
        trtl.forward(40)
        trtl.left(90)
        trtl.forward(x*20)
        trtl.right(90)
        trtl.forward(120)
        x = x + 1
    small_block(40)
    trtl.forward(80)
    large_block(40)
    trtl.forward(40)
    trtl.left(90)
    trtl.forward(60)
    trtl.left(90)
    trtl.setheading(0)
    trtl.end_fill()
#This adds the garage door to the top of the garage
def garage_door():
    trtl.penup()
    trtl.setposition(-340,-150)
    trtl.pendown()
    trtl.begin_fill()
    trtl.color(Colors[6])
    for i in range(2):
        trtl.forward(80)
        trtl.left(90)
        trtl.forward(20)
        trtl.left(90)
    trtl.end_fill()
#This funtion draws the skyline
def skyline():
    trtl.penup()
    trtl.setpos(500,-190)
    trtl.setheading(180)
    trtl.pendown()
    trtl.color(Colors[4])
    trtl.begin_fill()
    trtl.forward(120)
    small_block(20)
    trtl.forward(80)
    #Draws double driveway
    for i in range(2):
        large_block(40)
        trtl.forward(40)
    trtl.forward(40)
    # The while loop does a one block driveway folloed by a two block driveway and puts turtle in the place to make the garage
    x=1
    while x < 3:
        trtl.right(90)
        trtl.forward(x*20)
        trtl.left(90)
        trtl.forward(40)
        trtl.left(90)
        trtl.forward(x*20)
        trtl.right(90)
        trtl.forward(120)
        x = x + 1
    trtl.right(90)
    trtl.forward(60)
    trtl.left(90)
    trtl.forward(80)
    trtl.left(90)
    trtl.forward(60)
    trtl.right(90)
    trtl.forward(80)
    large_block(40)
    trtl.forward(40)
    trtl.right(90)
    trtl.forward(80)
    trtl.right(90)
    trtl.forward(80)
    trtl.left(90)
    trtl.forward(100)
    trtl.right(90)
    trtl.forward(240)
    trtl.right(90)
    trtl.forward(20)
    trtl.left(90)
    trtl.forward(160)
    trtl.right(90)
    trtl.forward(20)
    trtl.left(90)
    trtl.forward(120)
    trtl.left(90)
    trtl.forward(300)
    trtl.right(90)
    trtl.forward(200)
    trtl.right(90)
    trtl.forward(200)
    trtl.left(90)
    trtl.forward(120)
    trtl.right(90)
    trtl.forward(60)
    trtl.left(90)
    trtl.forward(80)
    trtl.right(90)
    trtl.forward(180)
    trtl.right(90)
    trtl.end_fill()
#this draws all the lights
def lights():
    trtl.penup()
    trtl.setpos(-500,-170)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(-340,-110)
    trtl.pendown()
    light_box()
    trtl.forward(40)
    light_box()
    trtl.penup()
    trtl.setpos(-340,-70)
    trtl.pendown()
    light_box()
    trtl.forward(40)
    light_box()
    trtl.penup()
    trtl.setpos(-140,-130)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(-140,-110)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(-20,-170)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(-20,-130)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(60,-130)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(140,-130)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(140,-50)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(140,30)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(140,110)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(140,190)
    trtl.pendown()
    light_box()
    trtl.forward(40)
    light_box()
    trtl.forward(40)
    light_box()
    trtl.penup()
    trtl.setpos(220,-130)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(220,-50)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(220,30)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(220,110)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(300,-170)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(300,-130)
    trtl.pendown()
    light_box()
    trtl.forward(40)
    light_box()
    trtl.penup()
    trtl.setpos(340,-90)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(300,-70)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(340,-30)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(420,-90)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(420,-130)
    trtl.pendown()
    light_box()
    trtl.penup()
    trtl.setpos(420,-170)
    trtl.pendown()
    light_box()
    trtl.forward(40)
    light_box()
#This draws the moon
def moon():
    trtl.penup()
    trtl.setpos(-500,250)
    trtl.pendown()
    trtl.setheading(0)
    trtl.color(Colors[1])
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(200)
        trtl.right(90)
        trtl.forward(160)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-300,250)
    trtl.pendown()
    trtl.setheading(0)
    trtl.color(Colors[2])
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(160)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-500,90)
    trtl.pendown()
    trtl.setheading(0)
    trtl.color(Colors[2])
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(200)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-260,250)
    trtl.pendown()
    trtl.color(Colors[7])
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(80)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-260,190)
    trtl.pendown()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(3):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.setheading(0)
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-260,110)
    trtl.pendown()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(80)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-500,70)
    trtl.pendown()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(40)
        trtl.right(90)
    trtl.end_fill()
    trtl.setpos(-420,70)
    trtl.pendown()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(40)
        trtl.right(90)
    trtl.end_fill()
    trtl.forward(40)
    trtl.begin_fill()
    for i in range(3):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.forward(40)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.left(90)
        trtl.forward(20)
        trtl.left(90)
    trtl.end_fill()
    trtl.forward(40)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-380,250)
    trtl.pendown()
    trtl.color(Colors[3])
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(80)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-500,230)
    trtl.pendown()
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(80)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-500,210)
    trtl.pendown()
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(80)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-380,210)
    trtl.pendown()
    trtl.begin_fill()
    for i in range(3):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-460,170)
    trtl.pendown()
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(40)
        trtl.right(90)
    trtl.end_fill()
    trtl.forward(40)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-340,150)
    trtl.pendown
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-380,130)
    trtl.pendown()
    trtl.begin_fill()
    for i in range(3):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.setheading(0)
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(40)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()
    trtl.penup()
    trtl.setpos(-500,110)
    trtl.pendown()
    trtl.begin_fill()
    for i in range(2):
        trtl.forward(80)
        trtl.right(90)
        trtl.forward(20)
        trtl.right(90)
    trtl.end_fill()

program = input("Would you like to run a cool program?: ")
if program=="yes":
    road()
    garage_door()
    skyline()
    lights()
    moon()
else:
    print("That's too bad")

wn = trtl.Screen()
wn.mainloop()